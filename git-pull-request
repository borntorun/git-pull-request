#!/bin/bash
ACCESS_TOKEN=$(git config --get github.pull-request.token)
if [[ -z $ACCESS_TOKEN ]]; then
  echo "Create an access token for your GitHub user at"
  echo "  https://github.com/settings/applications"
  echo "and set it under git config github.pull-request.token"
  echo "  $ git config --global github.pull-request.token <access_token>"
  exit 1
fi

usage() {
cat << EOF
usage: git pull-request -h <branch> -t <title> [options]
   or: git pull-request -h <branch> -i <issue> [options]

Create a Pull Request (PR) in GitHub.

OPTIONS:
   -h <branch>         Branch you want to PR. It has to exist in the remote.
   -r <repo>           Repo where to PR. Default is picked up from "$ git remote -v" origin fetch url.
   -o <owner>          Owner of the repo. Default is picked up from "$ git remote -v" origin fetch url.
   -b <base>           Branch where you want your PR merged into. Default "master".
   -t <title>          Title of the PR.
   -d <description>    Description of the PR.
   -i <issue>          Number of the issue related.
                       WARNING: This will convert the issue into a PR and override <title> and <description>
EOF
}

BASE="master"
REMOTE_ORIGIN=$(git remote -v | grep -E "origin.*\(fetch\)")
OWNER=$(echo $REMOTE_ORIGIN | sed -E "s/.*com[:\/](.*)\/.*/\\1/")
REPO=$(echo $REMOTE_ORIGIN | sed -E "s/.*com[:\/].*\/(.*)\..*/\\1/" | cut -d " " -f 1)

while getopts “h:r:b:t:d:i:” OPTION
do
  case $OPTION in
    h)
      HEAD=$OPTARG;;
    r)
      REPO=$OPTARG;;
    o)
      OWNER=$OPTARG;;
    b)
      BASE=$OPTARG;;
    t)
      TITLE=$OPTARG;;
    d)
      DESCRIPTION=$OPTARG;;
    i)
      ISSUE=$OPTARG;;
    ?)
      usage
      exit;;
  esac
done

if [[ -z $HEAD ]] || [[ -z $BASE ]] || [[ -z $TITLE ]] && [[ -z $ISSUE ]]; then
  usage
  exit 1
fi

BODY=("\"head\": \"$HEAD\"" "\"base\": \"$BASE\"")

if [[ -n $ISSUE ]]; then
  BODY[2]="\"issue\": \"$ISSUE\""
else
  BODY[2]="\"title\": \"$TITLE\""

  if [[ -n $DESCRIPTION ]]; then
    BODY[3]="\"body\": \"$DESCRIPTION\""
  fi
fi

SAVE_IFS=$IFS
IFS=","
BODY="{${BODY[*]}}"
IFS=$SAVE_IFS

curl -s -X POST -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$OWNER/$REPO/pulls" -d "$BODY" > /dev/null
